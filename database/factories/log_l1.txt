L1:

1. In command line:

php artisan make:factory TreadFactory


2. In the new TreadFactory

<?php
/** @var \Illuminate\Database\Eloquent\Factory $factory */
use App\Thread;
use Faker\Generator as Faker;
$factory->define(Thread::class, function (Faker $faker) {
    return [
        'user_id' => function () {
            return factory('App\User')->create()->id;
        },
        'title' => $faker->sentence,
        'body'  => $faker->paragraph
        //
    ];
});


3. In command line

php artisan make:ReplyFactory


4. In the ReplyFactory

<?php
/** @var \Illuminate\Database\Eloquent\Factory $factory */
use App\Reply;
use Faker\Generator as Faker;
$factory->define(Reply::class, function (Faker $faker) {
    return [
        'thread_id' => function () {
            return factory('App\Thread')->create()->id;
        },
        'user_id' => function () {
            return factory('App\User')->create()->id;
        },
        'body'  => $faker->paragraph
        //
    ];
});


5. In command line :

 php artisan tinker

6. In tinker:

$threads=factory('App\Thread',50)->create()
 $threads->each(function($thread){factory('App\Reply',10)->create(['thread_id'=>$thread->id]);});

7. Finish